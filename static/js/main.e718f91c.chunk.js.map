{"version":3,"sources":["logo.svg","ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","items","map","item","className","type","id","key","value","text","onChange","e","setUpdate","target","icon","onClick","deleteItem","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2RAAe,I,0BC+BAA,MA5Bf,SAAmBC,GACf,IACMD,EADQC,EAAMC,MACGC,KAAI,SAAAC,GAEnB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBAAOC,KAAK,OACZC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SACI,SAACC,GACGX,EAAMY,UAAUD,EAAEE,OAAOL,MAAOL,EAAKI,QAIjD,+BACI,cAAC,IAAD,CAAiBH,UAAU,UAAUU,KAAK,QAC1CC,QAAU,kBAAMf,EAAMgB,WAAWb,EAAKI,cAbZJ,EAAKI,QAoB/C,OACI,8BAAMR,K,eCrBdkB,IAAQC,IAAIC,K,IA6EGC,E,kDA1Ef,WAAYpB,GAAO,IAAD,8BAChB,cAAMA,IACDqB,MAAM,CACTpB,MAAM,GACNqB,YAAY,CACVb,KAAK,GACLF,IAAI,KAGR,EAAKgB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKR,WAAa,EAAKA,WAAWQ,KAAhB,gBAClB,EAAKZ,UAAY,EAAKA,UAAUY,KAAf,gBAZD,E,+CAclB,SAAYb,GACVe,KAAKC,SAAS,CACZL,YAAY,CACVb,KAAKE,EAAEE,OAAOL,MACdD,IAAIqB,KAAKC,W,qBAIf,SAAQlB,GACNA,EAAEmB,iBACF,IAAMC,EAASL,KAAKL,MAAMC,YAE1B,GADAU,QAAQC,IAAIF,GACM,KAAfA,EAAQtB,KAAU,CACnB,IAAMyB,EAAS,GAAD,mBAAKR,KAAKL,MAAMpB,OAAhB,CAAuB8B,IACrCL,KAAKC,SAAS,CACZ1B,MAAMiC,EACNZ,YAAY,CACVb,KAAK,GACLF,IAAI,S,wBAKZ,SAAWA,GACT,IAAM4B,EAAeT,KAAKL,MAAMpB,MAAMmC,QAAO,SAAAjC,GAAI,OAC/CA,EAAKI,MAAMA,KACXmB,KAAKC,SAAS,CACZ1B,MAAMkC,M,uBAGZ,SAAU1B,EAAMF,GACd,IAAMN,EAAQyB,KAAKL,MAAMpB,MACzBA,EAAMC,KAAI,SAAAC,GACLA,EAAKI,MAAMA,IACZJ,EAAKM,KAAKA,MAGdiB,KAAKC,SAAS,CACZ1B,MAAOA,M,oBAGT,WACE,OACE,sBAAKG,UAAU,MAAf,UACE,iCACA,uBAAME,GAAG,aAAa+B,SAAUX,KAAKD,QAArC,UACE,uBAAOpB,KAAK,OAAOiC,YAAY,aAAa9B,MAAOkB,KAAKL,MAAMC,YAAYb,KAC1EC,SAAUgB,KAAKH,cACf,wBAAQlB,KAAK,SAAb,sBAIJ,cAAC,EAAD,CAAWJ,MAAOyB,KAAKL,MAAMpB,MAC7Be,WAAcU,KAAKV,WACnBJ,UAAac,KAAKd,mB,GArEN2B,IAAMC,WCGTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e718f91c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport './ListItems.css'\r\nimport { FontAwesomeIcon, fontawesomeIcon} from '@fortawesome/react-fontawesome';\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const ListItems= items.map(item => \r\n        {\r\n            return <div className='list' key={item.key}>\r\n                <p>\r\n                    <input type=\"text\" \r\n                    id={item.key} \r\n                    value={item.text}\r\n                    onChange ={\r\n                        (e) =>{\r\n                            props.setUpdate(e.target.value, item.key)\r\n                        }\r\n                    }\r\n                    />\r\n                <span>\r\n                    <FontAwesomeIcon className=\"faicons\" icon='trash'\r\n                    onClick={ () => props.deleteItem(item.key)\r\n                    }/>\r\n                </span>\r\n                </p>\r\n                \r\n            </div>\r\n        })\r\n    return(\r\n        <div>{ListItems}</div>\r\n    )\r\n}\r\nexport default ListItems;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport ListItems from './ListItems';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends React.Component{\nconstructor(props){\n  super(props);\n  this.state={\n    items:[],\n    currentItem:{\n      text:'',\n      key:''\n    }\n  }\n  this.handleInput = this.handleInput.bind(this);\n  this.addItem = this.addItem.bind(this);\n  this.deleteItem = this.deleteItem.bind(this);\n  this.setUpdate = this.setUpdate.bind(this);\n}\nhandleInput(e){\n  this.setState({\n    currentItem:{\n      text:e.target.value,\n      key:Date.now()\n    }\n  })\n}\naddItem(e){\n  e.preventDefault();\n  const newItem= this.state.currentItem;\n  console.log(newItem);\n  if(newItem.text!==\"\"){\n    const newItems=[...this.state.items, newItem];\n    this.setState({\n      items:newItems,\n      currentItem:{\n        text:'',\n        key:''\n      }\n    })\n  }\n}\ndeleteItem(key){\n  const filteredItems= this.state.items.filter(item => \n    item.key!==key);\n    this.setState({\n      items:filteredItems\n    })\n}\nsetUpdate(text, key){\n  const items = this.state.items;\n  items.map(item =>{\n    if(item.key===key){\n      item.text=text;\n    }\n  })\n  this.setState({\n    items: items\n  })\n}\n  render(){\n    return(\n      <div className=\"App\">\n        <header>\n        <form id=\"to-do-form\" onSubmit={this.addItem}>\n          <input type=\"text\" placeholder=\"enter text\" value={this.state.currentItem.text}\n          onChange={this.handleInput}/>\n          <button type=\"submit\">Add</button>\n\n        </form>\n      </header>\n      <ListItems items={this.state.items}\n      deleteItem = {this.deleteItem}\n      setUpdate = {this.setUpdate}></ListItems>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}